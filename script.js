document.addEventListener("DOMContentLoaded", () => {
    // –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    const openRegisterBtn = document.getElementById("openRegister");
    const closeRegisterBtn = document.getElementById("closeRegister");
    const registerModal = document.getElementById("registerModal");
    const registerForm = document.getElementById("registerForm");
    const signupBtn = document.querySelector(".signup-btn");
	
	const wheel = document.getElementById("wheel");
    const spinButton = document.getElementById("spin");
    const numbersGroup = document.getElementById("numbers");
    let spinning = false;

    const numbers = [0, 32, 15, 19, 4, 21, 2, 25, 17, 34, 6, 27, 13, 36, 11, 30, 8, 23, 10, 5, 24, 16, 33, 1, 20, 14, 31, 9, 22, 18, 29, 7, 28, 12, 35, 3, 26];
    const sectorAngle = 360 / numbers.length;

    // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    function openRegisterModal() {
        registerModal.style.display = "flex";
    }

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    function closeRegisterModal() {
        registerModal.style.display = "none";
    }

    if (openRegisterBtn) {
        openRegisterBtn.addEventListener("click", openRegisterModal);
    }
    
    if (signupBtn) {
        signupBtn.addEventListener("click", openRegisterModal);
    }
    
    if (closeRegisterBtn) {
        closeRegisterBtn.addEventListener("click", closeRegisterModal);
    }

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –æ–∫–Ω–∞
    window.addEventListener("click", (e) => {
        if (e.target === registerModal) {
            closeRegisterModal();
        }
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    if (registerForm) {
        registerForm.addEventListener("submit", (e) => {
            e.preventDefault();
            
            const username = document.getElementById("username").value;
            const email = document.getElementById("email").value;
            const password = document.getElementById("password").value;
            const getBonus = document.getElementById("bonusCheckbox").checked;

            if (username && email && password) {
                // –û–±–Ω–æ–≤–ª—è–µ–º UI –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
                document.getElementById("openRegister").textContent = username;
                document.getElementById("openRegister").classList.add("logged-in");
                
                // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –±–æ–Ω—É—Å, –¥–æ–±–∞–≤–ª—è–µ–º –∫—Ä–µ–¥–∏—Ç—ã
                if (getBonus) {
                    updateCredits(500);
                }
                
                // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
                closeRegisterModal();
                
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ localStorage
                saveUserData(username, email, getBonus);
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
                showNotification("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, " + username);
            }
        });
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    function saveUserData(username, email, hasBonus) {
        const userData = {
            username: username,
            email: email,
            credits: hasBonus ? 1500 : 1000,
            registered: new Date().toISOString(),
            gamesPlayed: 0,
            isLoggedIn: true
        };
        
        localStorage.setItem("allcashUserData", JSON.stringify(userData));
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–æ–≤
    function updateCredits(amount) {
        const creditsElement = document.getElementById("credits");
        const currentCredits = parseInt(creditsElement.textContent.match(/\d+/)[0], 10);
        const newCredits = currentCredits + amount;
        
        creditsElement.textContent = `üí∞ ${newCredits} –∫—Ä–µ–¥–∏—Ç–æ–≤`;
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–æ–≤
        creditsElement.classList.add("credits-update");
        setTimeout(() => {
            creditsElement.classList.remove("credits-update");
        }, 1000);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ localStorage
        const userData = JSON.parse(localStorage.getItem("allcashUserData") || "{}");
        if (userData.username) {
            userData.credits = newCredits;
            localStorage.setItem("allcashUserData", JSON.stringify(userData));
        }
        
        return newCredits;
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    function showNotification(message, type = "success") {
        const notification = document.createElement("div");
        notification.className = `notification ${type}`;
        notification.textContent = message;
        
        document.body.appendChild(notification);
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
        setTimeout(() => {
            notification.classList.add("show");
        }, 10);
        
        // –£–¥–∞–ª–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
            notification.classList.remove("show");
            setTimeout(() => {
                document.body.removeChild(notification);
            }, 300);
        }, 3000);
    }
    
    // –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –ø—É–Ω–∫—Ç–∞–º –º–µ–Ω—é
    const navItems = document.querySelectorAll("nav a");
    navItems.forEach(item => {
        item.addEventListener("click", (e) => {
            e.preventDefault();
            
            // –£–¥–∞–ª—è–µ–º –∫–ª–∞—Å—Å active —É –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            navItems.forEach(navItem => navItem.classList.remove("active"));
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å active –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
            item.classList.add("active");
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
            showContent(item.id);
        });
    });
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–µ–∫—Ü–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    function showContent(contentId) {
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Ä–∞–∑–¥–µ–ª–∞–º–∏ —Å–∞–π—Ç–∞
        // –ù–∞–ø—Ä–∏–º–µ—Ä, —Å–∫—Ä—ã–≤–∞—Ç—å/–ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ .content-section
        
        const contentSections = document.querySelectorAll(".content-section");
        
        switch (contentId) {
            case "homeBtn":
                contentSections.forEach(section => section.style.display = "block");
                document.querySelector(".welcome-banner").style.display = "flex";
                break;
            case "slotsBtn":
                contentSections.forEach(section => section.style.display = "none");
                document.querySelector(".welcome-banner").style.display = "none";
                
                // –°–æ–∑–¥–∞–µ–º –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–µ–∫—Ü–∏—é —Å–æ —Å–ª–æ—Ç–∞–º–∏
                showSlotsSection();
                break;
            case "rouletteBtn":
                contentSections.forEach(section => section.style.display = "none");
                document.querySelector(".welcome-banner").style.display = "none";
                
                // –°–æ–∑–¥–∞–µ–º –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–µ–∫—Ü–∏—é —Å —Ä—É–ª–µ—Ç–∫–æ–π
                showRouletteSection();
                break;
            case "balanceBtn":
                contentSections.forEach(section => section.style.display = "none");
                document.querySelector(".welcome-banner").style.display = "none";
                
                // –°–æ–∑–¥–∞–µ–º –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–µ–∫—Ü–∏—é —Å –±–∞–ª–∞–Ω—Å–æ–º
                showBalanceSection();
                break;
            case "bonusBtn":
                contentSections.forEach(section => section.style.display = "none");
                document.querySelector(".welcome-banner").style.display = "none";
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —Å–µ–∫—Ü–∏—é —Å –±–æ–Ω—É—Å–∞–º–∏
                contentSections.forEach(section => {
                    if (section.querySelector(".section-title").textContent.includes("Bonuses")) {
                        section.style.display = "block";
                    }
                });
                break;
        }
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–µ–∫—Ü–∏–∏ —Å–æ —Å–ª–æ—Ç–∞–º–∏
    function showSlotsSection() {
        const mainContent = document.querySelector(".main-content");
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Å–µ–∫—Ü–∏—è —Å–æ —Å–ª–æ—Ç–∞–º–∏
        let slotsSection = document.getElementById("slots-section");
        
        if (!slotsSection) {
            // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å–µ–∫—Ü–∏—é —Å–æ —Å–ª–æ—Ç–∞–º–∏
            slotsSection = document.createElement("div");
            slotsSection.id = "slots-section";
            slotsSection.className = "content-section";
            
            slotsSection.innerHTML = `
                <div class="section-header">
                    <div class="section-title">
                        <img src="/api/placeholder/24/24" alt="Slots" class="section-icon">
                        –°–ª–æ—Ç—ã
                    </div>
                    <div class="section-dropdown">
                        <span>–ü–æ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏</span>
                        <img src="/api/placeholder/16/16" alt="Down" class="dropdown-icon">
                    </div>
                </div>
                <div class="games-grid">
                    <div class="game-item">
                        <img src="/api/placeholder/200/120" alt="Slot 1" class="game-image">
                        <div class="game-overlay">
                            <button class="play-button" data-game="slot1">Play now</button>
                        </div>
                        <div class="game-title">FRUIT SPIN</div>
                    </div>
                    <div class="game-item">
                        <img src="/api/placeholder/200/120" alt="Slot 2" class="game-image">
                        <div class="game-overlay">
                            <button class="play-button" data-game="slot2">Play now</button>
                        </div>
                        <div class="game-title">LUCKY 7</div>
                    </div>
                    <div class="game-item">
                        <img src="/api/placeholder/200/120" alt="Slot 3" class="game-image">
                        <div class="game-overlay">
                            <button class="play-button" data-game="slot3">Play now</button>
                        </div>
                        <div class="game-title">MEGA FORTUNE</div>
                    </div>
                    <div class="game-item">
                        <img src="/api/placeholder/200/120" alt="Slot 4" class="game-image">
                        <div class="game-overlay">
                            <button class="play-button" data-game="slot4">Play now</button>
                        </div>
                        <div class="game-title">SPACE ADVENTURE</div>
                    </div>
                </div>
            `;
            
            mainContent.appendChild(slotsSection);
            
            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∏–≥—Ä—ã
            const playButtons = slotsSection.querySelectorAll(".play-button");
            playButtons.forEach(button => {
                button.addEventListener("click", () => {
                    const gameId = button.getAttribute("data-game");
                    startGame(gameId);
                });
            });
        } else {
            slotsSection.style.display = "block";
        }
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–µ–∫—Ü–∏–∏ —Å —Ä—É–ª–µ—Ç–∫–æ–π
    function showRouletteSection() {
        const mainContent = document.querySelector(".main-content");
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Å–µ–∫—Ü–∏—è —Å —Ä—É–ª–µ—Ç–∫–æ–π
        let rouletteSection = document.getElementById("roulette-section");
        
        if (!rouletteSection) {
            // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å–µ–∫—Ü–∏—é —Å —Ä—É–ª–µ—Ç–∫–æ–π
            rouletteSection = document.createElement("div");
            rouletteSection.id = "roulette-section";
            rouletteSection.className = "content-section";
            
            rouletteSection.innerHTML = `
                <div class="section-header">
                    <div class="section-title">
                        <img src="/api/placeholder/24/24" alt="Roulette" class="section-icon">
                        –†—É–ª–µ—Ç–∫–∞
                    </div>
                </div>
                <div class="roulette-container">
                    <div class="roulette-wheel">
                        <img src="/api/placeholder/300/300" alt="Roulette Wheel" class="wheel-image">
                    </div>
                    <div class="roulette-controls">
                        <div class="bet-controls">
                            <h3>–°–¥–µ–ª–∞–π—Ç–µ —Å—Ç–∞–≤–∫—É</h3>
                            <div class="bet-amount">
                                <button class="bet-btn minus">-</button>
                                <input type="number" id="bet-value" value="50" min="10" max="1000">
                                <button class="bet-btn plus">+</button>
                            </div>
                            <div class="bet-type">
                                <button class="bet-type-btn" data-type="red">–ö—Ä–∞—Å–Ω–æ–µ</button>
                                <button class="bet-type-btn" data-type="black">–ß–µ—Ä–Ω–æ–µ</button>
                                <button class="bet-type-btn" data-type="green">–ó–µ–ª–µ–Ω–æ–µ</button>
                            </div>
                        </div>
                        <button id="spin-btn" class="spin-button">–í–†–ê–©–ê–¢–¨ –†–£–õ–ï–¢–ö–£</button>
                        <div class="roulette-history">
                            <h3>–ò—Å—Ç–æ—Ä–∏—è</h3>
                            <div class="history-numbers">
                                <!-- –ò—Å—Ç–æ—Ä–∏—è –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ —á–µ—Ä–µ–∑ JavaScript -->
                            </div>
                        </div>
                    </div>
                </div>
            `;
            
            mainContent.appendChild(rouletteSection);
            
            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ —Ä—É–ª–µ—Ç–∫–∏
            initializeRouletteControls();
        } else {
            rouletteSection.style.display = "block";
        }
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä—É–ª–µ—Ç–∫–æ–π
    function initializeRouletteControls() {
        const minusBtn = document.querySelector(".bet-btn.minus");
        const plusBtn = document.querySelector(".bet-btn.plus");
        const betInput = document.getElementById("bet-value");
        const spinBtn = document.getElementById("spin-btn");
        const betTypeButtons = document.querySelectorAll(".bet-type-btn");
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —Ç–∏–ø —Å—Ç–∞–≤–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        let activeBetType = "red";
        betTypeButtons[0].classList.add("active");
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ + –∏ -
        minusBtn.addEventListener("click", () => {
            let value = parseInt(betInput.value, 10);
            if (value > 10) {
                value -= 10;
                betInput.value = value;
            }
        });
        
        plusBtn.addEventListener("click", () => {
            let value = parseInt(betInput.value, 10);
            if (value < 1000) {
                value += 10;
                betInput.value = value;
            }
        });
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ —Ç–∏–ø–∞ —Å—Ç–∞–≤–∫–∏
        betTypeButtons.forEach(button => {
            button.addEventListener("click", () => {
                betTypeButtons.forEach(btn => btn.classList.remove("active"));
                button.classList.add("active");
                activeBetType = button.getAttribute("data-type");
            });
        });
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –≤—Ä–∞—â–µ–Ω–∏—è
        spinBtn.addEventListener("click", () => {
            const betAmount = parseInt(betInput.value, 10);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫—Ä–µ–¥–∏—Ç–æ–≤
            const currentCredits = parseInt(document.getElementById("credits").textContent.match(/\d+/)[0], 10);
            
            if (betAmount > currentCredits) {
                showNotification("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫—Ä–µ–¥–∏—Ç–æ–≤ –¥–ª—è —Å—Ç–∞–≤–∫–∏", "error");
                return;
            }
            
            // –°–Ω–∏–º–∞–µ–º —Å—Ç–∞–≤–∫—É —Å –±–∞–ª–∞–Ω—Å–∞
            updateCredits(-betAmount);
            
            // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –≤—Ä–∞—â–µ–Ω–∏—è
            spinRoulette(activeBetType, betAmount);
        });
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—Ä–∞—â–µ–Ω–∏—è —Ä—É–ª–µ—Ç–∫–∏
    function spinRoulette(betType, betAmount) {
        const wheel = document.querySelector(".wheel-image");
        const spinBtn = document.getElementById("spin-btn");
        
        // –û—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É –≤–æ –≤—Ä–µ–º—è –≤—Ä–∞—â–µ–Ω–∏—è
        spinBtn.disabled = true;
        spinBtn.textContent = "–í–†–ê–©–ï–ù–ò–ï...";
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        const result = Math.floor(Math.random() * 37); // 0-36
        let resultType;
        
        if (result === 0) {
            resultType = "green";
        } else if (result % 2 === 0) {
            resultType = "black";
        } else {
            resultType = "red";
        }
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –≤—Ä–∞—â–µ–Ω–∏—è
        wheel.style.animation = "none";
        setTimeout(() => {
            wheel.style.animation = "spin 3s ease-out forwards";
        }, 10);
        
        // –ß–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        setTimeout(() => {
            // –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é
            updateRouletteHistory(result, resultType);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã–∏–≥—Ä—ã—à
            if (betType === resultType) {
                let winAmount;
                if (betType === "green") {
                    winAmount = betAmount * 35;
                } else {
                    winAmount = betAmount * 2;
                }
                
                updateCredits(winAmount);
                showNotification(`–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${winAmount} –∫—Ä–µ–¥–∏—Ç–æ–≤!`, "success");
            } else {
                showNotification(`–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏. –í—ã–ø–∞–ª–æ: ${resultType} ${result}`, "error");
            }
            
            // –í–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É —Å–Ω–æ–≤–∞
            spinBtn.disabled = false;
            spinBtn.textContent = "–í–†–ê–©–ê–¢–¨ –†–£–õ–ï–¢–ö–£";
            
        }, 3000);
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —Ä—É–ª–µ—Ç–∫–∏
    function updateRouletteHistory(number, type) {
        const historyContainer = document.querySelector(".history-numbers");
        
        // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –∏—Å—Ç–æ—Ä–∏–∏
        const historyItem = document.createElement("div");
        historyItem.className = `history-item ${type}`;
        historyItem.textContent = number;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–∞—á–∞–ª–æ –∏—Å—Ç–æ—Ä–∏–∏
        historyContainer.prepend(historyItem);
        
        // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏—Å—Ç–æ—Ä–∏–∏
        if (historyContainer.children.length > 10) {
            historyContainer.removeChild(historyContainer.lastChild);
        }
    }
	

    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–µ–∫—Ü–∏–∏ —Å –±–∞–ª–∞–Ω—Å–æ–º
    function showBalanceSection() {
        const mainContent = document.querySelector(".main-content");
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Å–µ–∫—Ü–∏—è —Å –±–∞–ª–∞–Ω—Å–æ–º
        let balanceSection = document.getElementById("balance-section");
        
        if (!balanceSection) {
            // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            const userData = JSON.parse(localStorage.getItem("allcashUserData") || "{}");
            const username = userData.username || "–ì–æ—Å—Ç—å";
            const credits = userData.credits || 1000;
            const registered = userData.registered ? new Date(userData.registered).toLocaleDateString() : "–ù–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω";
            const gamesPlayed = userData.gamesPlayed || 0;
            
            // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å–µ–∫—Ü–∏—é —Å –±–∞–ª–∞–Ω—Å–æ–º
            balanceSection = document.createElement("div");
            balanceSection.id = "balance-section";
            balanceSection.className = "content-section";
            
            balanceSection.innerHTML = `
                <div class="section-header">
                    <div class="section-title">
                        <img src="/api/placeholder/24/24" alt="Balance" class="section-icon">
                        –ë–∞–ª–∞–Ω—Å –∏ –ø—Ä–æ—Ñ–∏–ª—å
                    </div>
                </div>
                <div class="profile-container">
                    <div class="profile-info">
                        <div class="profile-avatar">
                            <img src="/api/placeholder/100/100" alt="Avatar" class="avatar-image">
                        </div>
                        <div class="profile-details">
                            <h2>${username}</h2>
                            <p>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: ${registered}</p>
                            <p>–°—ã–≥—Ä–∞–Ω–æ –∏–≥—Ä: ${gamesPlayed}</p>
                        </div>
                    </div>
                    <div class="profile-balance">
                        <h3>–ë–∞–ª–∞–Ω—Å</h3>
                        <div class="balance-amount">üí∞ ${credits} –∫—Ä–µ–¥–∏—Ç–æ–≤</div>
                        <button class="deposit-btn">–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å</button>
                        <button class="withdraw-btn">–í—ã–≤–µ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞</button>
                    </div>
                    <div class="transaction-history">
                        <h3>–ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π</h3>
                        <div class="transactions">
                            <div class="no-transactions">–ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø—É—Å—Ç–∞</div>
                        </div>
                    </div>
                </div>
            `;
            
            mainContent.appendChild(balanceSection);
            
            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫
            const depositBtn = balanceSection.querySelector(".deposit-btn");
            const withdrawBtn = balanceSection.querySelector(".withdraw-btn");
            
            depositBtn.addEventListener("click", () => {
                showDepositModal();
            });
            
            withdrawBtn.addEventListener("click", () => {
                showWithdrawModal();
            });
        } else {
            balanceSection.style.display = "block";
        }
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
    function showDepositModal() {
        // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        const depositModal = document.createElement("div");
        depositModal.className = "modal";
        depositModal.id = "depositModal";
        
        depositModal.innerHTML = `
            <div class="modal-content">
                <span class="close-btn">&times;</span>
                <h2>–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞</h2>
                <form id="depositForm">
                    <label for="amount">–°—É–º–º–∞ (–∫—Ä–µ–¥–∏—Ç—ã):</label>
                    <input type="number" id="amount" placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É" min="100" max="10000" required>
                    
                    <label for="paymentMethod">–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:</label>
                    <select id="paymentMethod" required>
                        <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</option>
                        <option value="card">–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞</option>
                        <option value="qiwi">QIWI</option>
                        <option value="webmoney">WebMoney</option>
                        <option value="crypto">–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞</option>
                    </select>
                    
                    <button type="submit">–ü–æ–ø–æ–ª–Ω–∏—Ç—å</button>
                </form>
            </div>
        `;
        
        document.body.appendChild(depositModal);
        depositModal.style.display = "flex";
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è
        const closeBtn = depositModal.querySelector(".close-btn");
        closeBtn.addEventListener("click", () => {
            document.body.removeChild(depositModal);
        });
        
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –æ–∫–Ω–∞
        depositModal.addEventListener("click", (e) => {
            if (e.target === depositModal) {
                document.body.removeChild(depositModal);
            }
        });
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ä–º—ã
        const depositForm = depositModal.querySelector("#depositForm");
        depositForm.addEventListener("submit", (e) => {
            e.preventDefault();
            
            const amount = parseInt(depositForm.amount.value, 10);
            
            // –ò–º–∏—Ç–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
            setTimeout(() => {
                updateCredits(amount);
                showNotification(`–ë–∞–ª–∞–Ω—Å —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ ${amount} –∫—Ä–µ–¥–∏—Ç–æ–≤`, "success");
                document.body.removeChild(depositModal);
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
                addTransaction("deposit", amount);
            }, 1000);
        });
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –≤—ã–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤
    function showWithdrawModal() {
        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å
        const currentCredits = parseInt(document.getElementById("credits").textContent.match(/\d+/)[0], 10);
        
        // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        const withdrawModal = document.createElement("div");
        withdrawModal.className = "modal";
        withdrawModal.id = "withdrawModal";
        
        withdrawModal.innerHTML = `
            <div class="modal-content">
                <span class="close-btn">&times;</span>
                <h2>–í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤</h2>
                <form id="withdrawForm">
                    <p>–î–æ—Å—Ç—É–ø–Ω–æ: ${currentCredits} –∫—Ä–µ–¥–∏—Ç–æ–≤</p>
                    
                    <label for="withdrawAmount">–°—É–º–º–∞ (–∫—Ä–µ–¥–∏—Ç—ã):</label>
                    <input type="number" id="withdrawAmount" placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É" min="100" max="${currentCredits}" required>
                    
                    <label for="withdrawMethod">–°–ø–æ—Å–æ–± –≤—ã–≤–æ–¥–∞:</label>
                    <select id="withdrawMethod" required>
                        <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –≤—ã–≤–æ–¥–∞</option>
                        <option value="card">–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞</option>
                        <option value="qiwi">QIWI</option>
                        <option value="webmoney">WebMoney</option>
                        <option value="crypto">–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞</option>
                    </select>
                    
                    <label for="withdrawDetails">–†–µ–∫–≤–∏–∑–∏—Ç—ã:</label>
                    <input type="text" id="withdrawDetails" placeholder="–í–≤–µ–¥–∏—Ç–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã" required>
                    
                    <button type="submit">–í—ã–≤–µ—Å—Ç–∏</button>
                </form>
            </div>
        `;
        
        document.body.appendChild(withdrawModal);
        withdrawModal.style.display = "flex";
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è
        const closeBtn = withdrawModal.querySelector(".close-btn");
        closeBtn.addEventListener("click", () => {
            document.body.removeChild(withdrawModal);
        });
        
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –æ–∫–Ω–∞
        withdrawModal.addEventListener("click", (e) => {
            if (e.target === withdrawModal) {
                document.body.removeChild(withdrawModal);
            }
        });
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ä–º—ã
        const withdrawForm = withdrawModal.querySelector("#withdrawForm");
        withdrawForm.addEventListener("submit", (e) => {
            e.preventDefault();
            
            const amount = parseInt(withdrawForm.withdrawAmount.value, 10);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤
            if (amount > currentCredits) {
                showNotification("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –≤—ã–≤–æ–¥–∞", "error");
                return;
            }
            
            // –ò–º–∏—Ç–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
            setTimeout(() => {
                updateCredits(-amount);
                showNotification(`–ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–≤–æ–¥ ${amount} –∫—Ä–µ–¥–∏—Ç–æ–≤ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω`, "success");
                document.body.removeChild(withdrawModal);
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
                addTransaction("withdraw", amount);
            }, 1000);
        });
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤ –∏—Å—Ç–æ—Ä–∏—é
    function addTransaction(type, amount) {
        const transactionsContainer = document.querySelector(".transactions");
        
        // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—É—Å—Ç–æ–π –∏—Å—Ç–æ—Ä–∏–∏
        const noTransactions = transactionsContainer.querySelector(".no-transactions");
        if (noTransactions) {
            transactionsContainer.removeChild(noTransactions);
        }
        
        // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
        const transaction = document.createElement("div");
        transaction.className = `transaction ${type}`;
        
        const date = new Date().toLocaleString();
        const typeText = type === "deposit" ? "–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ" : "–í—ã–≤–æ–¥";
        const amountText = type === "deposit" ? `+${amount}` : `-${amount}`;
        
        transaction.innerHTML = `
            <div class="transaction-date">${date}</div>
            <div class="transaction-type">${typeText}</div>
            <div class="transaction-amount">${amountText}</div>
        `;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–∞—á–∞–ª–æ –∏—Å—Ç–æ—Ä–∏–∏
        transactionsContainer.prepend(transaction);
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã
    function startGame(gameId) {
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∑–∞–ø—É—Å–∫ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∏–≥—Ä
        // –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ gameId
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
        const userData = JSON.parse(localStorage.getItem("allcashUserData") || "{}");
        if (!userData.username) {
            showNotification("–î–ª—è –∏–≥—Ä—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è", "error");
            openRegisterModal();
            return;
        }
        
        // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –∏–≥—Ä–æ–π
        const gameModal = document.createElement("div");
        gameModal.className = "modal";
        gameModal.id = `${gameId}Modal`;
        
        let gameTitle = "";
        let gameContent = "";
        
        switch (gameId) {
            case "slot1":
                gameTitle = "FRUIT SPIN";
                gameContent = createSlotGameContent();
                break;
            case "slot2":
                gameTitle = "LUCKY 7";
                gameContent = createSlotGameContent();
                break;
            case "slot3":
                gameTitle = "MEGA FORTUNE";
                gameContent = createSlotGameContent();
                break;
            case "slot4":
                gameTitle = "SPACE ADVENTURE";
                gameContent = createSlotGameContent();
                break;
            default:
                gameTitle = "Game";
                gameContent = "<p>–≠—Ç–∞ –∏–≥—Ä–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</p>";
        }
        
        gameModal.innerHTML = `
            <div class="modal-content game-modal-content">
                <span class="close-btn">&times;</span>
                <h2>${gameTitle}</h2>
                ${gameContent}
            </div>
        `;
        
        document.body.appendChild(gameModal);
        gameModal.style.display = "flex";
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è
        const closeBtn = gameModal.querySelector(".close-btn");
        closeBtn.addEventListener("click", () => {
            document.body.removeChild(gameModal);
        });
        
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –æ–∫–Ω–∞
        gameModal.addEventListener("click", (e) => {
            if (e.target === gameModal) {
                document.body.removeChild(gameModal);
            }
        });
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–≥—Ä—É, –µ—Å–ª–∏ —ç—Ç–æ —Å–ª–æ—Ç
        if (gameId.startsWith("slot")) {
            initializeSlotGame(gameModal);
        }
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Å–ª–æ—Ç–∞
    function createSlotGameContent() {
        return `
            <div class="slot-game-container">
                <div class="slot-display">
                    <div class="slot-reels">
                        <div class="reel" id="reel1"></div>
                        <div class="reel" id="reel2"></div>
                        <div class="reel" id="reel3"></div>
                    </div>
                </div>
                <div class="slot-controls">
                    <div class="bet-controls">
                        <button class="bet-btn minus">-</button>
                        <input type="number" id="slot-bet-value" value="50" min="10" max="1000">
                        <button class="bet-btn plus">+</button>
                    </div>
                    <button id="spin-slot-btn" class="spin-button">–°–ü–ò–ù!</button>
                </div>
                <div class="slot-info">
                    <div class="slot-win-display">–í—ã–∏–≥—Ä—ã—à: <span id="win-amount">0</span></div>
                    <div class="slot-paytable">
                        <h3>–¢–∞–±–ª–∏—Ü–∞ –≤—ã–ø–ª–∞—Ç</h3>
                        <div class="paytable-item">
                            <span>üçíüçíüçí</span>
                            <span>x3</span>
                        </div>
                        <div class="paytable-item">
                            <span>üçãüçãüçã</span>
                            <span>x5</span>
                        </div>
                        <div class="paytable-item">
                            <span>üçäüçäüçä</span>
                            <span>x8</span>
                        </div>
                        <div class="paytable-item">
                            <span>üçáüçáüçá</span>
                            <span>x10</span>
                        </div>
                        <div class="paytable-item">
                            <span>7Ô∏è‚É£7Ô∏è‚É£7Ô∏è‚É£</span>
                            <span>x50</span>
                        </div>
                    </div>
                </div>
            </div>
        `;
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–≥—Ä—ã –≤ —Å–ª–æ—Ç
    function initializeSlotGame(gameModal) {
        const reels = [
            document.getElementById("reel1"),
            document.getElementById("reel2"),
            document.getElementById("reel3")
        ];
        
        // –°–∏–º–≤–æ–ª—ã –¥–ª—è —Å–ª–æ—Ç–∞
        const symbols = ["üçí", "üçã", "üçä", "üçá", "7Ô∏è‚É£"];
        
        // –ó–∞–ø–æ–ª–Ω—è–µ–º –±–∞—Ä–∞–±–∞–Ω—ã —Å–ª—É—á–∞–π–Ω—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏
        reels.forEach(reel => {
            for (let i = 0; i < 3; i++) {
                const symbolEl = document.createElement("div");
                symbolEl.className = "slot-symbol";
                symbolEl.textContent = symbols[Math.floor(Math.random() * symbols.length)];
                reel.appendChild(symbolEl);
            }
        });
        
        // –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç–∞–≤–∫–æ–π
        const minusBtn = gameModal.querySelector(".bet-btn.minus");
        const plusBtn = gameModal.querySelector(".bet-btn.plus");
        const betInput = gameModal.querySelector("#slot-bet-value");
        const spinBtn = gameModal.querySelector("#spin-slot-btn");
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ + –∏ -
        minusBtn.addEventListener("click", () => {
            let value = parseInt(betInput.value, 10);
            if (value > 10) {
                value -= 10;
                betInput.value = value;
            }
        });
        
        plusBtn.addEventListener("click", () => {
            let value = parseInt(betInput.value, 10);
            if (value < 1000) {
                value += 10;
                betInput.value = value;
            }
        });
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ —Å–ø–∏–Ω–∞
        spinBtn.addEventListener("click", () => {
            const betAmount = parseInt(betInput.value, 10);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫—Ä–µ–¥–∏—Ç–æ–≤
            const currentCredits = parseInt(document.getElementById("credits").textContent.match(/\d+/)[0], 10);
            
            if (betAmount > currentCredits) {
                showNotification("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫—Ä–µ–¥–∏—Ç–æ–≤ –¥–ª—è —Å—Ç–∞–≤–∫–∏", "error");
                return;
            }
            
            // –°–Ω–∏–º–∞–µ–º —Å—Ç–∞–≤–∫—É —Å –±–∞–ª–∞–Ω—Å–∞
            updateCredits(-betAmount);
            
            // –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Ä–∞—â–µ–Ω–∏–µ —Å–ª–æ—Ç–∞
            spinSlot(reels, symbols, betAmount);
        });
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—Ä–∞—â–µ–Ω–∏—è —Å–ª–æ—Ç–∞
    function spinSlot(reels, symbols, betAmount) {
        const spinBtn = document.getElementById("spin-slot-btn");
        const winDisplay = document.getElementById("win-amount");
        
        // –û—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É –≤–æ –≤—Ä–µ–º—è –≤—Ä–∞—â–µ–Ω–∏—è
        spinBtn.disabled = true;
        spinBtn.textContent = "–í–†–ê–©–ï–ù–ò–ï...";
        winDisplay.textContent = "0";
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –±–∞—Ä–∞–±–∞–Ω–∞
        const results = [];
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –≤—Ä–∞—â–µ–Ω–∏—è
        reels.forEach((reel, index) => {
            // –û—á–∏—â–∞–µ–º –±–∞—Ä–∞–±–∞–Ω
            reel.innerHTML = "";
            
            // –°–æ–∑–¥–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
            reel.style.animation = `spin-reel ${1 + index * 0.5}s ease-out`;
            
            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –±–∞—Ä–∞–±–∞–Ω–∞
            const result = Math.floor(Math.random() * symbols.length);
            results.push(result);
            
            // –ó–∞–ø–æ–ª–Ω—è–µ–º –±–∞—Ä–∞–±–∞–Ω —Å–∏–º–≤–æ–ª–∞–º–∏
            for (let i = 0; i < 3; i++) {
                const symbolEl = document.createElement("div");
                symbolEl.className = "slot-symbol";
                symbolEl.textContent = symbols[(result + i) % symbols.length];
                reel.appendChild(symbolEl);
            }
        });
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã–∏–≥—Ä—ã—à —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
            // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
            reels.forEach(reel => {
                reel.style.animation = "none";
            });
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã–∏–≥—Ä—ã—à
            let win = 0;
            
            // –ï—Å–ª–∏ –≤—Å–µ —Å–∏–º–≤–æ–ª—ã –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ
            if (results[0] === results[1] && results[1] === results[2]) {
                switch (results[0]) {
                    case 0: // üçí
                        win = betAmount * 3;
                        break;
                    case 1: // üçã
                        win = betAmount * 5;
                        break;
                    case 2: // üçä
                        win = betAmount * 8;
                        break;
                    case 3: // üçá
                        win = betAmount * 10;
                        break;
                    case 4: // 7Ô∏è‚É£
                        win = betAmount * 50;
                        break;
                }
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—ã–∏–≥—Ä—ã—à–∞
            winDisplay.textContent = win;
            
            // –ï—Å–ª–∏ –≤—ã–∏–≥—Ä—ã—à, –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞ –±–∞–ª–∞–Ω—Å
            if (win > 0) {
                updateCredits(win);
                showNotification(`–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${win} –∫—Ä–µ–¥–∏—Ç–æ–≤!`, "success");
            }
            
            // –í–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É —Å–Ω–æ–≤–∞
            spinBtn.disabled = false;
            spinBtn.textContent = "–°–ü–ò–ù!";
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—ã–≥—Ä–∞–Ω–Ω—ã—Ö –∏–≥—Ä
            const userData = JSON.parse(localStorage.getItem("allcashUserData") || "{}");
            if (userData.username) {
                userData.gamesPlayed = (userData.gamesPlayed || 0) + 1;
                localStorage.setItem("allcashUserData", JSON.stringify(userData));
            }
            
        }, 3000);
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    const savedUserData = JSON.parse(localStorage.getItem("allcashUserData") || "{}");
    if (savedUserData.username && savedUserData.isLoggedIn) {
        // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞–ª–æ–≥–∏–Ω–µ–Ω, –æ–±–Ω–æ–≤–ª—è–µ–º UI
        document.getElementById("openRegister").textContent = savedUserData.username;
        document.getElementById("openRegister").classList.add("logged-in");
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–æ–≤
        const creditsElement = document.getElementById("credits");
        creditsElement.textContent = `üí∞ ${savedUserData.credits} –∫—Ä–µ–¥–∏—Ç–æ–≤`;
    }
});